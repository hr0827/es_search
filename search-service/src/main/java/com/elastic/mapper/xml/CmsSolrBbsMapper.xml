<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.elastic.mapper.CmsSolrBbsMapper" >
  <resultMap id="BaseResultMap" type="com.elastic.entity.po.CmsSolrBbs" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="category_id" property="categoryId" jdbcType="INTEGER" />
    <result column="community_name" property="communityName" jdbcType="VARCHAR" />
    <result column="community_summary" property="communitySummary" jdbcType="VARCHAR" />
    <result column="surface" property="surface" jdbcType="VARCHAR" />
    <result column="like" property="like" jdbcType="INTEGER" />
    <result column="collect" property="collect" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="del_flag" property="delFlag" jdbcType="TINYINT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.elastic.entity.po.CmsSolrBbs" extends="BaseResultMap" >
    <result column="community_content" property="communityContent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, category_id, community_name, community_summary, surface, `like`, collect, create_time,
    modify_time, del_flag
  </sql>
  <sql id="Blob_Column_List" >
    community_content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.elastic.entity.po.CmsSolrBbsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from cms_solr_bbs
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.elastic.entity.po.CmsSolrBbsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from cms_solr_bbs
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart >= 0" >
      limit ${limitStart} , ${count}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from cms_solr_bbs
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from cms_solr_bbs
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.elastic.entity.po.CmsSolrBbsExample" >
    delete from cms_solr_bbs
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.elastic.entity.po.CmsSolrBbs" >
    insert into cms_solr_bbs (id, category_id, community_name, 
      community_summary, surface, `like`,
      collect, create_time, modify_time, 
      del_flag, community_content)
    values (#{id,jdbcType=INTEGER}, #{categoryId,jdbcType=INTEGER}, #{communityName,jdbcType=VARCHAR}, 
      #{communitySummary,jdbcType=VARCHAR}, #{surface,jdbcType=VARCHAR}, #{like,jdbcType=INTEGER}, 
      #{collect,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}, 
      #{delFlag,jdbcType=TINYINT}, #{communityContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.elastic.entity.po.CmsSolrBbs" >
    insert into cms_solr_bbs
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="categoryId != null" >
        category_id,
      </if>
      <if test="communityName != null" >
        community_name,
      </if>
      <if test="communitySummary != null" >
        community_summary,
      </if>
      <if test="surface != null" >
        surface,
      </if>
      <if test="like != null" >
        `like`,
      </if>
      <if test="collect != null" >
        collect,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
      <if test="communityContent != null" >
        community_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="categoryId != null" >
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="communityName != null" >
        #{communityName,jdbcType=VARCHAR},
      </if>
      <if test="communitySummary != null" >
        #{communitySummary,jdbcType=VARCHAR},
      </if>
      <if test="surface != null" >
        #{surface,jdbcType=VARCHAR},
      </if>
      <if test="like != null" >
        #{like,jdbcType=INTEGER},
      </if>
      <if test="collect != null" >
        #{collect,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=TINYINT},
      </if>
      <if test="communityContent != null" >
        #{communityContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.elastic.entity.po.CmsSolrBbsExample" resultType="java.lang.Integer" >
    select count(*) from cms_solr_bbs
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update cms_solr_bbs
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.categoryId != null" >
        category_id = #{record.categoryId,jdbcType=INTEGER},
      </if>
      <if test="record.communityName != null" >
        community_name = #{record.communityName,jdbcType=VARCHAR},
      </if>
      <if test="record.communitySummary != null" >
        community_summary = #{record.communitySummary,jdbcType=VARCHAR},
      </if>
      <if test="record.surface != null" >
        surface = #{record.surface,jdbcType=VARCHAR},
      </if>
      <if test="record.like != null" >
        `like` = #{record.like,jdbcType=INTEGER},
      </if>
      <if test="record.collect != null" >
        collect = #{record.collect,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null" >
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.delFlag != null" >
        del_flag = #{record.delFlag,jdbcType=TINYINT},
      </if>
      <if test="record.communityContent != null" >
        community_content = #{record.communityContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update cms_solr_bbs
    set id = #{record.id,jdbcType=INTEGER},
      category_id = #{record.categoryId,jdbcType=INTEGER},
      community_name = #{record.communityName,jdbcType=VARCHAR},
      community_summary = #{record.communitySummary,jdbcType=VARCHAR},
      surface = #{record.surface,jdbcType=VARCHAR},
      `like` = #{record.like,jdbcType=INTEGER},
      collect = #{record.collect,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      del_flag = #{record.delFlag,jdbcType=TINYINT},
      community_content = #{record.communityContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update cms_solr_bbs
    set id = #{record.id,jdbcType=INTEGER},
      category_id = #{record.categoryId,jdbcType=INTEGER},
      community_name = #{record.communityName,jdbcType=VARCHAR},
      community_summary = #{record.communitySummary,jdbcType=VARCHAR},
      surface = #{record.surface,jdbcType=VARCHAR},
      `like` = #{record.like,jdbcType=INTEGER},
      collect = #{record.collect,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      del_flag = #{record.delFlag,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.elastic.entity.po.CmsSolrBbs" >
    update cms_solr_bbs
    <set >
      <if test="categoryId != null" >
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="communityName != null" >
        community_name = #{communityName,jdbcType=VARCHAR},
      </if>
      <if test="communitySummary != null" >
        community_summary = #{communitySummary,jdbcType=VARCHAR},
      </if>
      <if test="surface != null" >
        surface = #{surface,jdbcType=VARCHAR},
      </if>
      <if test="like != null" >
        `like` = #{like,jdbcType=INTEGER},
      </if>
      <if test="collect != null" >
        collect = #{collect,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=TINYINT},
      </if>
      <if test="communityContent != null" >
        community_content = #{communityContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.elastic.entity.po.CmsSolrBbs" >
    update cms_solr_bbs
    set category_id = #{categoryId,jdbcType=INTEGER},
      community_name = #{communityName,jdbcType=VARCHAR},
      community_summary = #{communitySummary,jdbcType=VARCHAR},
      surface = #{surface,jdbcType=VARCHAR},
      `like` = #{like,jdbcType=INTEGER},
      collect = #{collect,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      del_flag = #{delFlag,jdbcType=TINYINT},
      del_flag = #{delFlag,jdbcType=TINYINT},
      community_content = #{communityContent,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.elastic.entity.po.CmsSolrBbs" >
    update cms_solr_bbs
    set category_id = #{categoryId,jdbcType=INTEGER},
      community_name = #{communityName,jdbcType=VARCHAR},
      community_summary = #{communitySummary,jdbcType=VARCHAR},
      surface = #{surface,jdbcType=VARCHAR},
      `like` = #{like,jdbcType=INTEGER},
      collect = #{collect,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      del_flag = #{delFlag,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>